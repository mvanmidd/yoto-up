name: Cross-platform build (Windows / macOS / Linux)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  actions: read

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.11]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r yoto_app/requirements.txt
          pip install pyinstaller

      # Adjust ENTRY_SCRIPT below if your GUI entrypoint is different (e.g. yoto.py)
      - name: Build (Linux / macOS)
        if: matrix.os != 'windows-latest'
        run: |
          # Use a deterministic name so artifacts are predictable
          ENTRY_SCRIPT=gui.py
          pyinstaller --noconfirm --onefile --windowed --name yoto-up $ENTRY_SCRIPT
          # create a tarball for the built executable
          mkdir -p out
          if [ -f dist/yoto-up ]; then
            tar -czf out/yoto-up-${{ runner.os }}.tar.gz -C dist yoto-up
          else
            # fallback: include whole dist directory
            tar -czf out/yoto-up-${{ runner.os }}.tar.gz -C dist .
          fi
        shell: bash

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          $Env:ENTRY_SCRIPT = 'gui.py'
          pyinstaller --noconfirm --onefile --windowed --name yoto-up $Env:ENTRY_SCRIPT
          New-Item -ItemType Directory -Path out -Force | Out-Null
          if (Test-Path dist\yoto-up.exe) {
            Compress-Archive -Path dist\yoto-up.exe -DestinationPath out\yoto-up-windows.zip -Force
          } else {
            Compress-Archive -Path dist\* -DestinationPath out\yoto-up-windows.zip -Force
          }
        shell: powershell

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: yoto-up-${{ matrix.os }}
          path: out
